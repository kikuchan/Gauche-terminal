;;;
;;; terminfo.scm
;;;
;;; THE ORANGINA LICENSE
;;; Copyright 2013 wasao
;;; All rights reserved.
;;;
;;; You can do whatever you want with this stuff.
;;; If we meet some day, and you think this stuff is worth it,
;;; you can buy me a bottle of orangina in return.
;;;
;;; wasao
;;; walter@wasao.org
;;;

(define-module terminal.terminfo
  (use srfi-11)
  (use srfi-13)
  (use terminal.capability)
  (export load-terminfo-entry)
  )
(select-module terminal.terminfo)


;;;
;;; Parameter
;;;

(define-constant %default-terminfo-directories
  (list (x->string (sys-getenv "TERMINFO"))
        "/etc/terminfo"
        "/lib/terminfo"
        "/usr/share/terminfo"
        "/usr/share/misc/terminfo"))

(define-constant %table-of-capabilities
  (hash-table
   'eq?
   '(auto-left-margin . (boolean . 0))
   '(auto-right-margin . (boolean . 1))
   '(no-esc-ctlc . (boolean . 2))
   '(ceol-standout-glitch . (boolean . 3))
   '(eat-newline-glitch . (boolean . 4))
   '(erase-overstrike . (boolean . 5))
   '(generic-type . (boolean . 6))
   '(hard-copy . (boolean . 7))
   '(has-meta-key . (boolean . 8))
   '(has-status-line . (boolean . 9))
   '(insert-null-glitch . (boolean . 10))
   '(memory-above . (boolean . 11))
   '(memory-below . (boolean . 12))
   '(move-insert-mode . (boolean . 13))
   '(move-standout-mode . (boolean . 14))
   '(over-strike . (boolean . 15))
   '(status-line-esc-ok . (boolean . 16))
   '(dest-tabs-magic-smso . (boolean . 17))
   '(tilde-glitch . (boolean . 18))
   '(transparent-underline . (boolean . 19))
   '(xon-xoff . (boolean . 20))
   '(needs-xon-xoff . (boolean . 21))
   '(prtr-silent . (boolean . 22))
   '(hard-cursor . (boolean . 23))
   '(non-rev-rmcup . (boolean . 24))
   '(no-pad-char . (boolean . 25))
   '(non-dest-scroll-region . (boolean . 26))
   '(can-change . (boolean . 27))
   '(back-color-erase . (boolean . 28))
   '(hue-lightness-saturation . (boolean . 29))
   '(col-addr-glitch . (boolean . 30))
   '(cr-cancels-micro-mode . (boolean . 31))
   '(has-print-wheel . (boolean . 32))
   '(row-addr-glitch . (boolean . 33))
   '(semi-auto-right-margin . (boolean . 34))
   '(cpi-changes-res . (boolean . 35))
   '(lpi-changes-res . (boolean . 36))
   '(backspaces-with-bs . (boolean . 37))
   '(crt-no-scrolling . (boolean . 38))
   '(no-correctly-working-cr . (boolean . 39))
   '(gnu-has-meta-key . (boolean . 40))
   '(linefeed-is-newline . (boolean . 41))
   '(has-hardware-tabs . (boolean . 42))
   '(return-does-clr-eol . (boolean . 43))
   
   '(columns . (number . 0))
   '(init-tabs . (number . 1))
   '(lines . (number . 2))
   '(lines-of-memory . (number . 3))
   '(magic-cookie-glitch . (number . 4))
   '(padding-baud-rate . (number . 5))
   '(virtual-terminal . (number . 6))
   '(width-status-line . (number . 7))
   '(num-labels . (number . 8))
   '(label-height . (number . 9))
   '(label-width . (number . 10))
   '(max-attributes . (number . 11))
   '(maximum-windows . (number . 12))
   '(max-colors . (number . 13))
   '(max-pairs . (number . 14))
   '(no-color-video . (number . 15))
   '(buffer-capacity . (number . 16))
   '(dot-vert-spacing . (number . 17))
   '(dot-horz-spacing . (number . 18))
   '(max-micro-address . (number . 19))
   '(max-micro-jump . (number . 20))
   '(micro-col-size . (number . 21))
   '(micro-line-size . (number . 22))
   '(number-of-pins . (number . 23))
   '(output-res-char . (number . 24))
   '(output-res-line . (number . 25))
   '(output-res-horz-inch . (number . 26))
   '(output-res-vert-inch . (number . 27))
   '(print-rate . (number . 28))
   '(wide-char-size . (number . 29))
   '(buttons . (number . 30))
   '(bit-image-entwining . (number . 31))
   '(bit-image-type . (number . 32))
   '(magic-cookie-glitch-ul . (number . 33))
   '(carriage-return-delay . (number . 34))
   '(new-line-delay . (number . 35))
   '(backspace-delay . (number . 36))
   '(horizontal-tab-delay . (number . 37))
   '(number-of-function-keys . (number . 38))
   
   '(back-tab . (string . 0))
   '(bell . (string . 1))
   '(carriage-return . (string . 2))
   '(change-scroll-region . (string . 3))
   '(clear-all-tabs . (string . 4))
   '(clear-screen . (string . 5))
   '(clr-eol . (string . 6))
   '(clr-eos . (string . 7))
   '(column-address . (string . 8))
   '(command-character . (string . 9))
   '(cursor-address . (string . 10))
   '(cursor-down . (string . 11))
   '(cursor-home . (string . 12))
   '(cursor-invisible . (string . 13))
   '(cursor-left . (string . 14))
   '(cursor-mem-address . (string . 15))
   '(cursor-normal . (string . 16))
   '(cursor-right . (string . 17))
   '(cursor-to-ll . (string . 18))
   '(cursor-up . (string . 19))
   '(cursor-visible . (string . 20))
   '(delete-character . (string . 21))
   '(delete-line . (string . 22))
   '(dis-status-line . (string . 23))
   '(down-half-line . (string . 24))
   '(enter-alt-charset-mode . (string . 25))
   '(enter-blink-mode . (string . 26))
   '(enter-bold-mode . (string . 27))
   '(enter-ca-mode . (string . 28))
   '(enter-delete-mode . (string . 29))
   '(enter-dim-mode . (string . 30))
   '(enter-insert-mode . (string . 31))
   '(enter-secure-mode . (string . 32))
   '(enter-protected-mode . (string . 33))
   '(enter-reverse-mode . (string . 34))
   '(enter-standout-mode . (string . 35))
   '(enter-underline-mode . (string . 36))
   '(erase-chars . (string . 37))
   '(exit-alt-charset-mode . (string . 38))
   '(exit-attribute-mode . (string . 39))
   '(exit-ca-mode . (string . 40))
   '(exit-delete-mode . (string . 41))
   '(exit-insert-mode . (string . 42))
   '(exit-standout-mode . (string . 43))
   '(exit-underline-mode . (string . 44))
   '(flash-screen . (string . 45))
   '(form-feed . (string . 46))
   '(from-status-line . (string . 47))
   '(init-1string . (string . 48))
   '(init-2string . (string . 49))
   '(init-3string . (string . 50))
   '(init-file . (string . 51))
   '(insert-character . (string . 52))
   '(insert-line . (string . 53))
   '(insert-padding . (string . 54))
   '(key-backspace . (string . 55))
   '(key-catab . (string . 56))
   '(key-clear . (string . 57))
   '(key-ctab . (string . 58))
   '(key-dc . (string . 59))
   '(key-dl . (string . 60))
   '(key-down . (string . 61))
   '(key-eic . (string . 62))
   '(key-eol . (string . 63))
   '(key-eos . (string . 64))
   '(key-f0 . (string . 65))
   '(key-f1 . (string . 66))
   '(key-f10 . (string . 67))
   '(key-f2 . (string . 68))
   '(key-f3 . (string . 69))
   '(key-f4 . (string . 70))
   '(key-f5 . (string . 71))
   '(key-f6 . (string . 72))
   '(key-f7 . (string . 73))
   '(key-f8 . (string . 74))
   '(key-f9 . (string . 75))
   '(key-home . (string . 76))
   '(key-ic . (string . 77))
   '(key-il . (string . 78))
   '(key-left . (string . 79))
   '(key-ll . (string . 80))
   '(key-npage . (string . 81))
   '(key-ppage . (string . 82))
   '(key-right . (string . 83))
   '(key-sf . (string . 84))
   '(key-sr . (string . 85))
   '(key-stab . (string . 86))
   '(key-up . (string . 87))
   '(keypad-local . (string . 88))
   '(keypad-xmit . (string . 89))
   '(lab-f0 . (string . 90))
   '(lab-f1 . (string . 91))
   '(lab-f10 . (string . 92))
   '(lab-f2 . (string . 93))
   '(lab-f3 . (string . 94))
   '(lab-f4 . (string . 95))
   '(lab-f5 . (string . 96))
   '(lab-f6 . (string . 97))
   '(lab-f7 . (string . 98))
   '(lab-f8 . (string . 99))
   '(lab-f9 . (string . 100))
   '(meta-off . (string . 101))
   '(meta-on . (string . 102))
   '(new-line . (string . 103))
   '(pad-char . (string . 104))
   '(parm-dch . (string . 105))
   '(parm-delete-line . (string . 106))
   '(parm-down-cursor . (string . 107))
   '(parm-ich . (string . 108))
   '(parm-index . (string . 109))
   '(parm-insert-line . (string . 110))
   '(parm-left-cursor . (string . 111))
   '(parm-right-cursor . (string . 112))
   '(parm-rindex . (string . 113))
   '(parm-up-cursor . (string . 114))
   '(pkey-key . (string . 115))
   '(pkey-local . (string . 116))
   '(pkey-xmit . (string . 117))
   '(print-screen . (string . 118))
   '(prtr-off . (string . 119))
   '(prtr-on . (string . 120))
   '(repeat-char . (string . 121))
   '(reset-1string . (string . 122))
   '(reset-2string . (string . 123))
   '(reset-3string . (string . 124))
   '(reset-file . (string . 125))
   '(restore-cursor . (string . 126))
   '(row-address . (string . 127))
   '(save-cursor . (string . 128))
   '(scroll-forward . (string . 129))
   '(scroll-reverse . (string . 130))
   '(set-attributes . (string . 131))
   '(set-tab . (string . 132))
   '(set-window . (string . 133))
   '(tab . (string . 134))
   '(to-status-line . (string . 135))
   '(underline-char . (string . 136))
   '(up-half-line . (string . 137))
   '(init-prog . (string . 138))
   '(key-a1 . (string . 139))
   '(key-a3 . (string . 140))
   '(key-b2 . (string . 141))
   '(key-c1 . (string . 142))
   '(key-c3 . (string . 143))
   '(prtr-non . (string . 144))
   '(char-padding . (string . 145))
   '(acs-chars . (string . 146))
   '(plab-norm . (string . 147))
   '(key-btab . (string . 148))
   '(enter-xon-mode . (string . 149))
   '(exit-xon-mode . (string . 150))
   '(enter-am-mode . (string . 151))
   '(exit-am-mode . (string . 152))
   '(xon-character . (string . 153))
   '(xoff-character . (string . 154))
   '(ena-acs . (string . 155))
   '(label-on . (string . 156))
   '(label-off . (string . 157))
   '(key-beg . (string . 158))
   '(key-cancel . (string . 159))
   '(key-close . (string . 160))
   '(key-command . (string . 161))
   '(key-copy . (string . 162))
   '(key-create . (string . 163))
   '(key-end . (string . 164))
   '(key-enter . (string . 165))
   '(key-exit . (string . 166))
   '(key-find . (string . 167))
   '(key-help . (string . 168))
   '(key-mark . (string . 169))
   '(key-message . (string . 170))
   '(key-move . (string . 171))
   '(key-next . (string . 172))
   '(key-open . (string . 173))
   '(key-options . (string . 174))
   '(key-previous . (string . 175))
   '(key-print . (string . 176))
   '(key-redo . (string . 177))
   '(key-reference . (string . 178))
   '(key-refresh . (string . 179))
   '(key-replace . (string . 180))
   '(key-restart . (string . 181))
   '(key-resume . (string . 182))
   '(key-save . (string . 183))
   '(key-suspend . (string . 184))
   '(key-undo . (string . 185))
   '(key-sbeg . (string . 186))
   '(key-scancel . (string . 187))
   '(key-scommand . (string . 188))
   '(key-scopy . (string . 189))
   '(key-screate . (string . 190))
   '(key-sdc . (string . 191))
   '(key-sdl . (string . 192))
   '(key-select . (string . 193))
   '(key-send . (string . 194))
   '(key-seol . (string . 195))
   '(key-sexit . (string . 196))
   '(key-sfind . (string . 197))
   '(key-shelp . (string . 198))
   '(key-shome . (string . 199))
   '(key-sic . (string . 200))
   '(key-sleft . (string . 201))
   '(key-smessage . (string . 202))
   '(key-smove . (string . 203))
   '(key-snext . (string . 204))
   '(key-soptions . (string . 205))
   '(key-sprevious . (string . 206))
   '(key-sprint . (string . 207))
   '(key-sredo . (string . 208))
   '(key-sreplace . (string . 209))
   '(key-sright . (string . 210))
   '(key-srsume . (string . 211))
   '(key-ssave . (string . 212))
   '(key-ssuspend . (string . 213))
   '(key-sundo . (string . 214))
   '(req-for-input . (string . 215))
   '(key-f11 . (string . 216))
   '(key-f12 . (string . 217))
   '(key-f13 . (string . 218))
   '(key-f14 . (string . 219))
   '(key-f15 . (string . 220))
   '(key-f16 . (string . 221))
   '(key-f17 . (string . 222))
   '(key-f18 . (string . 223))
   '(key-f19 . (string . 224))
   '(key-f20 . (string . 225))
   '(key-f21 . (string . 226))
   '(key-f22 . (string . 227))
   '(key-f23 . (string . 228))
   '(key-f24 . (string . 229))
   '(key-f25 . (string . 230))
   '(key-f26 . (string . 231))
   '(key-f27 . (string . 232))
   '(key-f28 . (string . 233))
   '(key-f29 . (string . 234))
   '(key-f30 . (string . 235))
   '(key-f31 . (string . 236))
   '(key-f32 . (string . 237))
   '(key-f33 . (string . 238))
   '(key-f34 . (string . 239))
   '(key-f35 . (string . 240))
   '(key-f36 . (string . 241))
   '(key-f37 . (string . 242))
   '(key-f38 . (string . 243))
   '(key-f39 . (string . 244))
   '(key-f40 . (string . 245))
   '(key-f41 . (string . 246))
   '(key-f42 . (string . 247))
   '(key-f43 . (string . 248))
   '(key-f44 . (string . 249))
   '(key-f45 . (string . 250))
   '(key-f46 . (string . 251))
   '(key-f47 . (string . 252))
   '(key-f48 . (string . 253))
   '(key-f49 . (string . 254))
   '(key-f50 . (string . 255))
   '(key-f51 . (string . 256))
   '(key-f52 . (string . 257))
   '(key-f53 . (string . 258))
   '(key-f54 . (string . 259))
   '(key-f55 . (string . 260))
   '(key-f56 . (string . 261))
   '(key-f57 . (string . 262))
   '(key-f58 . (string . 263))
   '(key-f59 . (string . 264))
   '(key-f60 . (string . 265))
   '(key-f61 . (string . 266))
   '(key-f62 . (string . 267))
   '(key-f63 . (string . 268))
   '(clr-bol . (string . 269))
   '(clear-margins . (string . 270))
   '(set-left-margin . (string . 271))
   '(set-right-margin . (string . 272))
   '(label-format . (string . 273))
   '(set-clock . (string . 274))
   '(display-clock . (string . 275))
   '(remove-clock . (string . 276))
   '(create-window . (string . 277))
   '(goto-window . (string . 278))
   '(hangup . (string . 279))
   '(dial-phone . (string . 280))
   '(quick-dial . (string . 281))
   '(tone . (string . 282))
   '(pulse . (string . 283))
   '(flash-hook . (string . 284))
   '(fixed-pause . (string . 285))
   '(wait-tone . (string . 286))
   '(user0 . (string . 287))
   '(user1 . (string . 288))
   '(user2 . (string . 289))
   '(user3 . (string . 290))
   '(user4 . (string . 291))
   '(user5 . (string . 292))
   '(user6 . (string . 293))
   '(user7 . (string . 294))
   '(user8 . (string . 295))
   '(user9 . (string . 296))
   '(orig-pair . (string . 297))
   '(orig-colors . (string . 298))
   '(initialize-color . (string . 299))
   '(initialize-pair . (string . 300))
   '(set-color-pair . (string . 301))
   '(set-foreground . (string . 302))
   '(set-background . (string . 303))
   '(change-char-pitch . (string . 304))
   '(change-line-pitch . (string . 305))
   '(change-res-horz . (string . 306))
   '(change-res-vert . (string . 307))
   '(define-char . (string . 308))
   '(enter-doublewide-mode . (string . 309))
   '(enter-draft-quality . (string . 310))
   '(enter-italics-mode . (string . 311))
   '(enter-leftward-mode . (string . 312))
   '(enter-micro-mode . (string . 313))
   '(enter-near-letter-quality . (string . 314))
   '(enter-normal-quality . (string . 315))
   '(enter-shadow-mode . (string . 316))
   '(enter-subscript-mode . (string . 317))
   '(enter-superscript-mode . (string . 318))
   '(enter-upward-mode . (string . 319))
   '(exit-doublewide-mode . (string . 320))
   '(exit-italics-mode . (string . 321))
   '(exit-leftward-mode . (string . 322))
   '(exit-micro-mode . (string . 323))
   '(exit-shadow-mode . (string . 324))
   '(exit-subscript-mode . (string . 325))
   '(exit-superscript-mode . (string . 326))
   '(exit-upward-mode . (string . 327))
   '(micro-column-address . (string . 328))
   '(micro-down . (string . 329))
   '(micro-left . (string . 330))
   '(micro-right . (string . 331))
   '(micro-row-address . (string . 332))
   '(micro-up . (string . 333))
   '(order-of-pins . (string . 334))
   '(parm-down-micro . (string . 335))
   '(parm-left-micro . (string . 336))
   '(parm-right-micro . (string . 337))
   '(parm-up-micro . (string . 338))
   '(select-char-set . (string . 339))
   '(set-bottom-margin . (string . 340))
   '(set-bottom-margin-parm . (string . 341))
   '(set-left-margin-parm . (string . 342))
   '(set-right-margin-parm . (string . 343))
   '(set-top-margin . (string . 344))
   '(set-top-margin-parm . (string . 345))
   '(start-bit-image . (string . 346))
   '(start-char-set-def . (string . 347))
   '(stop-bit-image . (string . 348))
   '(stop-char-set-def . (string . 349))
   '(subscript-characters . (string . 350))
   '(superscript-characters . (string . 351))
   '(these-cause-cr . (string . 352))
   '(zero-motion . (string . 353))
   '(char-set-names . (string . 354))
   '(key-mouse . (string . 355))
   '(mouse-info . (string . 356))
   '(req-mouse-pos . (string . 357))
   '(get-mouse . (string . 358))
   '(set-a-foreground . (string . 359))
   '(set-a-background . (string . 360))
   '(pkey-plab . (string . 361))
   '(device-type . (string . 362))
   '(code-set-init . (string . 363))
   '(set0-des-seq . (string . 364))
   '(set1-des-seq . (string . 365))
   '(set2-des-seq . (string . 366))
   '(set3-des-seq . (string . 367))
   '(set-lr-margin . (string . 368))
   '(set-tb-margin . (string . 369))
   '(bit-image-repeat . (string . 370))
   '(bit-image-newline . (string . 371))
   '(bit-image-carriage-return . (string . 372))
   '(color-names . (string . 373))
   '(define-bit-image-region . (string . 374))
   '(end-bit-image-region . (string . 375))
   '(set-color-band . (string . 376))
   '(set-page-length . (string . 377))
   '(display-pc-char . (string . 378))
   '(enter-pc-charset-mode . (string . 379))
   '(exit-pc-charset-mode . (string . 380))
   '(enter-scancode-mode . (string . 381))
   '(exit-scancode-mode . (string . 382))
   '(pc-term-options . (string . 383))
   '(scancode-escape . (string . 384))
   '(alt-scancode-esc . (string . 385))
   '(enter-horizontal-hl-mode . (string . 386))
   '(enter-left-hl-mode . (string . 387))
   '(enter-low-hl-mode . (string . 388))
   '(enter-right-hl-mode . (string . 389))
   '(enter-top-hl-mode . (string . 390))
   '(enter-vertical-hl-mode . (string . 391))
   '(set-a-attributes . (string . 392))
   '(set-pglen-inch . (string . 393))
   '(termcap-init2 . (string . 394))
   '(termcap-reset . (string . 395))
   '(linefeed-if-not-lf . (string . 396))
   '(backspace-if-not-bs . (string . 397))
   '(other-non-function-keys . (string . 398))
   '(arrow-key-map . (string . 399))
   '(acs-ulcorner . (string . 400))
   '(acs-llcorner . (string . 401))
   '(acs-urcorner . (string . 402))
   '(acs-lrcorner . (string . 403))
   '(acs-ltee . (string . 404))
   '(acs-rtee . (string . 405))
   '(acs-btee . (string . 406))
   '(acs-ttee . (string . 407))
   '(acs-hline . (string . 408))
   '(acs-vline . (string . 409))
   '(acs-plus . (string . 410))
   '(memory-lock . (string . 411))
   '(memory-unlock . (string . 412))
   '(box-chars-1 . (string . 413))
   )
  )

(define-constant %table-of-booleans
  (hash-table
   'eq?
   '(0 . auto-left-margin)
   '(1 . auto-right-margin)
   '(2 . no-esc-ctlc)
   '(3 . ceol-standout-glitch)
   '(4 . eat-newline-glitch)
   '(5 . erase-overstrike)
   '(6 . generic-type)
   '(7 . hard-copy)
   '(8 . has-meta-key)
   '(9 . has-status-line)
   '(10 . insert-null-glitch)
   '(11 . memory-above)
   '(12 . memory-below)
   '(13 . move-insert-mode)
   '(14 . move-standout-mode)
   '(15 . over-strike)
   '(16 . status-line-esc-ok)
   '(17 . dest-tabs-magic-smso)
   '(18 . tilde-glitch)
   '(19 . transparent-underline)
   '(20 . xon-xoff)
   '(21 . needs-xon-xoff)
   '(22 . prtr-silent)
   '(23 . hard-cursor)
   '(24 . non-rev-rmcup)
   '(25 . no-pad-char)
   '(26 . non-dest-scroll-region)
   '(27 . can-change)
   '(28 . back-color-erase)
   '(29 . hue-lightness-saturation)
   '(30 . col-addr-glitch)
   '(31 . cr-cancels-micro-mode)
   '(32 . has-print-wheel)
   '(33 . row-addr-glitch)
   '(34 . semi-auto-right-margin)
   '(35 . cpi-changes-res)
   '(36 . lpi-changes-res)
   '(37 . backspaces-with-bs)
   '(38 . crt-no-scrolling)
   '(39 . no-correctly-working-cr)
   '(40 . gnu-has-meta-key)
   '(41 . linefeed-is-newline)
   '(42 . has-hardware-tabs)
   '(43 . return-does-clr-eol)
   )
  )

(define-constant %table-of-numbers
  (hash-table
   'eq?
   '(0 . columns)
   '(1 . init-tabs)
   '(2 . lines)
   '(3 . lines-of-memory)
   '(4 . magic-cookie-glitch)
   '(5 . padding-baud-rate)
   '(6 . virtual-terminal)
   '(7 . width-status-line)
   '(8 . num-labels)
   '(9 . label-height)
   '(10 . label-width)
   '(11 . max-attributes)
   '(12 . maximum-windows)
   '(13 . max-colors)
   '(14 . max-pairs)
   '(15 . no-color-video)
   '(16 . buffer-capacity)
   '(17 . dot-vert-spacing)
   '(18 . dot-horz-spacing)
   '(19 . max-micro-address)
   '(20 . max-micro-jump)
   '(21 . micro-col-size)
   '(22 . micro-line-size)
   '(23 . number-of-pins)
   '(24 . output-res-char)
   '(25 . output-res-line)
   '(26 . output-res-horz-inch)
   '(27 . output-res-vert-inch)
   '(28 . print-rate)
   '(29 . wide-char-size)
   '(30 . buttons)
   '(31 . bit-image-entwining)
   '(32 . bit-image-type)
   '(33 . magic-cookie-glitch-ul)
   '(34 . carriage-return-delay)
   '(35 . new-line-delay)
   '(36 . backspace-delay)
   '(37 . horizontal-tab-delay)
   '(38 . number-of-function-keys)
   )
  )

(define-constant %table-of-strings
  (hash-table
   'eq?
   '(0 . back-tab)
   '(1 . bell)
   '(2 . carriage-return)
   '(3 . change-scroll-region)
   '(4 . clear-all-tabs)
   '(5 . clear-screen)
   '(6 . clr-eol)
   '(7 . clr-eos)
   '(8 . column-address)
   '(9 . command-character)
   '(10 . cursor-address)
   '(11 . cursor-down)
   '(12 . cursor-home)
   '(13 . cursor-invisible)
   '(14 . cursor-left)
   '(15 . cursor-mem-address)
   '(16 . cursor-normal)
   '(17 . cursor-right)
   '(18 . cursor-to-ll)
   '(19 . cursor-up)
   '(20 . cursor-visible)
   '(21 . delete-character)
   '(22 . delete-line)
   '(23 . dis-status-line)
   '(24 . down-half-line)
   '(25 . enter-alt-charset-mode)
   '(26 . enter-blink-mode)
   '(27 . enter-bold-mode)
   '(28 . enter-ca-mode)
   '(29 . enter-delete-mode)
   '(30 . enter-dim-mode)
   '(31 . enter-insert-mode)
   '(32 . enter-secure-mode)
   '(33 . enter-protected-mode)
   '(34 . enter-reverse-mode)
   '(35 . enter-standout-mode)
   '(36 . enter-underline-mode)
   '(37 . erase-chars)
   '(38 . exit-alt-charset-mode)
   '(39 . exit-attribute-mode)
   '(40 . exit-ca-mode)
   '(41 . exit-delete-mode)
   '(42 . exit-insert-mode)
   '(43 . exit-standout-mode)
   '(44 . exit-underline-mode)
   '(45 . flash-screen)
   '(46 . form-feed)
   '(47 . from-status-line)
   '(48 . init-1string)
   '(49 . init-2string)
   '(50 . init-3string)
   '(51 . init-file)
   '(52 . insert-character)
   '(53 . insert-line)
   '(54 . insert-padding)
   '(55 . key-backspace)
   '(56 . key-catab)
   '(57 . key-clear)
   '(58 . key-ctab)
   '(59 . key-dc)
   '(60 . key-dl)
   '(61 . key-down)
   '(62 . key-eic)
   '(63 . key-eol)
   '(64 . key-eos)
   '(65 . key-f0)
   '(66 . key-f1)
   '(67 . key-f10)
   '(68 . key-f2)
   '(69 . key-f3)
   '(70 . key-f4)
   '(71 . key-f5)
   '(72 . key-f6)
   '(73 . key-f7)
   '(74 . key-f8)
   '(75 . key-f9)
   '(76 . key-home)
   '(77 . key-ic)
   '(78 . key-il)
   '(79 . key-left)
   '(80 . key-ll)
   '(81 . key-npage)
   '(82 . key-ppage)
   '(83 . key-right)
   '(84 . key-sf)
   '(85 . key-sr)
   '(86 . key-stab)
   '(87 . key-up)
   '(88 . keypad-local)
   '(89 . keypad-xmit)
   '(90 . lab-f0)
   '(91 . lab-f1)
   '(92 . lab-f10)
   '(93 . lab-f2)
   '(94 . lab-f3)
   '(95 . lab-f4)
   '(96 . lab-f5)
   '(97 . lab-f6)
   '(98 . lab-f7)
   '(99 . lab-f8)
   '(100 . lab-f9)
   '(101 . meta-off)
   '(102 . meta-on)
   '(103 . new-line)
   '(104 . pad-char)
   '(105 . parm-dch)
   '(106 . parm-delete-line)
   '(107 . parm-down-cursor)
   '(108 . parm-ich)
   '(109 . parm-index)
   '(110 . parm-insert-line)
   '(111 . parm-left-cursor)
   '(112 . parm-right-cursor)
   '(113 . parm-rindex)
   '(114 . parm-up-cursor)
   '(115 . pkey-key)
   '(116 . pkey-local)
   '(117 . pkey-xmit)
   '(118 . print-screen)
   '(119 . prtr-off)
   '(120 . prtr-on)
   '(121 . repeat-char)
   '(122 . reset-1string)
   '(123 . reset-2string)
   '(124 . reset-3string)
   '(125 . reset-file)
   '(126 . restore-cursor)
   '(127 . row-address)
   '(128 . save-cursor)
   '(129 . scroll-forward)
   '(130 . scroll-reverse)
   '(131 . set-attributes)
   '(132 . set-tab)
   '(133 . set-window)
   '(134 . tab)
   '(135 . to-status-line)
   '(136 . underline-char)
   '(137 . up-half-line)
   '(138 . init-prog)
   '(139 . key-a1)
   '(140 . key-a3)
   '(141 . key-b2)
   '(142 . key-c1)
   '(143 . key-c3)
   '(144 . prtr-non)
   '(145 . char-padding)
   '(146 . acs-chars)
   '(147 . plab-norm)
   '(148 . key-btab)
   '(149 . enter-xon-mode)
   '(150 . exit-xon-mode)
   '(151 . enter-am-mode)
   '(152 . exit-am-mode)
   '(153 . xon-character)
   '(154 . xoff-character)
   '(155 . ena-acs)
   '(156 . label-on)
   '(157 . label-off)
   '(158 . key-beg)
   '(159 . key-cancel)
   '(160 . key-close)
   '(161 . key-command)
   '(162 . key-copy)
   '(163 . key-create)
   '(164 . key-end)
   '(165 . key-enter)
   '(166 . key-exit)
   '(167 . key-find)
   '(168 . key-help)
   '(169 . key-mark)
   '(170 . key-message)
   '(171 . key-move)
   '(172 . key-next)
   '(173 . key-open)
   '(174 . key-options)
   '(175 . key-previous)
   '(176 . key-print)
   '(177 . key-redo)
   '(178 . key-reference)
   '(179 . key-refresh)
   '(180 . key-replace)
   '(181 . key-restart)
   '(182 . key-resume)
   '(183 . key-save)
   '(184 . key-suspend)
   '(185 . key-undo)
   '(186 . key-sbeg)
   '(187 . key-scancel)
   '(188 . key-scommand)
   '(189 . key-scopy)
   '(190 . key-screate)
   '(191 . key-sdc)
   '(192 . key-sdl)
   '(193 . key-select)
   '(194 . key-send)
   '(195 . key-seol)
   '(196 . key-sexit)
   '(197 . key-sfind)
   '(198 . key-shelp)
   '(199 . key-shome)
   '(200 . key-sic)
   '(201 . key-sleft)
   '(202 . key-smessage)
   '(203 . key-smove)
   '(204 . key-snext)
   '(205 . key-soptions)
   '(206 . key-sprevious)
   '(207 . key-sprint)
   '(208 . key-sredo)
   '(209 . key-sreplace)
   '(210 . key-sright)
   '(211 . key-srsume)
   '(212 . key-ssave)
   '(213 . key-ssuspend)
   '(214 . key-sundo)
   '(215 . req-for-input)
   '(216 . key-f11)
   '(217 . key-f12)
   '(218 . key-f13)
   '(219 . key-f14)
   '(220 . key-f15)
   '(221 . key-f16)
   '(222 . key-f17)
   '(223 . key-f18)
   '(224 . key-f19)
   '(225 . key-f20)
   '(226 . key-f21)
   '(227 . key-f22)
   '(228 . key-f23)
   '(229 . key-f24)
   '(230 . key-f25)
   '(231 . key-f26)
   '(232 . key-f27)
   '(233 . key-f28)
   '(234 . key-f29)
   '(235 . key-f30)
   '(236 . key-f31)
   '(237 . key-f32)
   '(238 . key-f33)
   '(239 . key-f34)
   '(240 . key-f35)
   '(241 . key-f36)
   '(242 . key-f37)
   '(243 . key-f38)
   '(244 . key-f39)
   '(245 . key-f40)
   '(246 . key-f41)
   '(247 . key-f42)
   '(248 . key-f43)
   '(249 . key-f44)
   '(250 . key-f45)
   '(251 . key-f46)
   '(252 . key-f47)
   '(253 . key-f48)
   '(254 . key-f49)
   '(255 . key-f50)
   '(256 . key-f51)
   '(257 . key-f52)
   '(258 . key-f53)
   '(259 . key-f54)
   '(260 . key-f55)
   '(261 . key-f56)
   '(262 . key-f57)
   '(263 . key-f58)
   '(264 . key-f59)
   '(265 . key-f60)
   '(266 . key-f61)
   '(267 . key-f62)
   '(268 . key-f63)
   '(269 . clr-bol)
   '(270 . clear-margins)
   '(271 . set-left-margin)
   '(272 . set-right-margin)
   '(273 . label-format)
   '(274 . set-clock)
   '(275 . display-clock)
   '(276 . remove-clock)
   '(277 . create-window)
   '(278 . goto-window)
   '(279 . hangup)
   '(280 . dial-phone)
   '(281 . quick-dial)
   '(282 . tone)
   '(283 . pulse)
   '(284 . flash-hook)
   '(285 . fixed-pause)
   '(286 . wait-tone)
   '(287 . user0)
   '(288 . user1)
   '(289 . user2)
   '(290 . user3)
   '(291 . user4)
   '(292 . user5)
   '(293 . user6)
   '(294 . user7)
   '(295 . user8)
   '(296 . user9)
   '(297 . orig-pair)
   '(298 . orig-colors)
   '(299 . initialize-color)
   '(300 . initialize-pair)
   '(301 . set-color-pair)
   '(302 . set-foreground)
   '(303 . set-background)
   '(304 . change-char-pitch)
   '(305 . change-line-pitch)
   '(306 . change-res-horz)
   '(307 . change-res-vert)
   '(308 . define-char)
   '(309 . enter-doublewide-mode)
   '(310 . enter-draft-quality)
   '(311 . enter-italics-mode)
   '(312 . enter-leftward-mode)
   '(313 . enter-micro-mode)
   '(314 . enter-near-letter-quality)
   '(315 . enter-normal-quality)
   '(316 . enter-shadow-mode)
   '(317 . enter-subscript-mode)
   '(318 . enter-superscript-mode)
   '(319 . enter-upward-mode)
   '(320 . exit-doublewide-mode)
   '(321 . exit-italics-mode)
   '(322 . exit-leftward-mode)
   '(323 . exit-micro-mode)
   '(324 . exit-shadow-mode)
   '(325 . exit-subscript-mode)
   '(326 . exit-superscript-mode)
   '(327 . exit-upward-mode)
   '(328 . micro-column-address)
   '(329 . micro-down)
   '(330 . micro-left)
   '(331 . micro-right)
   '(332 . micro-row-address)
   '(333 . micro-up)
   '(334 . order-of-pins)
   '(335 . parm-down-micro)
   '(336 . parm-left-micro)
   '(337 . parm-right-micro)
   '(338 . parm-up-micro)
   '(339 . select-char-set)
   '(340 . set-bottom-margin)
   '(341 . set-bottom-margin-parm)
   '(342 . set-left-margin-parm)
   '(343 . set-right-margin-parm)
   '(344 . set-top-margin)
   '(345 . set-top-margin-parm)
   '(346 . start-bit-image)
   '(347 . start-char-set-def)
   '(348 . stop-bit-image)
   '(349 . stop-char-set-def)
   '(350 . subscript-characters)
   '(351 . superscript-characters)
   '(352 . these-cause-cr)
   '(353 . zero-motion)
   '(354 . char-set-names)
   '(355 . key-mouse)
   '(356 . mouse-info)
   '(357 . req-mouse-pos)
   '(358 . get-mouse)
   '(359 . set-a-foreground)
   '(360 . set-a-background)
   '(361 . pkey-plab)
   '(362 . device-type)
   '(363 . code-set-init)
   '(364 . set0-des-seq)
   '(365 . set1-des-seq)
   '(366 . set2-des-seq)
   '(367 . set3-des-seq)
   '(368 . set-lr-margin)
   '(369 . set-tb-margin)
   '(370 . bit-image-repeat)
   '(371 . bit-image-newline)
   '(372 . bit-image-carriage-return)
   '(373 . color-names)
   '(374 . define-bit-image-region)
   '(375 . end-bit-image-region)
   '(376 . set-color-band)
   '(377 . set-page-length)
   '(378 . display-pc-char)
   '(379 . enter-pc-charset-mode)
   '(380 . exit-pc-charset-mode)
   '(381 . enter-scancode-mode)
   '(382 . exit-scancode-mode)
   '(383 . pc-term-options)
   '(384 . scancode-escape)
   '(385 . alt-scancode-esc)
   '(386 . enter-horizontal-hl-mode)
   '(387 . enter-left-hl-mode)
   '(388 . enter-low-hl-mode)
   '(389 . enter-right-hl-mode)
   '(390 . enter-top-hl-mode)
   '(391 . enter-vertical-hl-mode)
   '(392 . set-a-attributes)
   '(393 . set-pglen-inch)
   '(394 . termcap-init2)
   '(395 . termcap-reset)
   '(396 . linefeed-if-not-lf)
   '(397 . backspace-if-not-bs)
   '(398 . other-non-function-keys)
   '(399 . arrow-key-map)
   '(400 . acs-ulcorner)
   '(401 . acs-llcorner)
   '(402 . acs-urcorner)
   '(403 . acs-lrcorner)
   '(404 . acs-ltee)
   '(405 . acs-rtee)
   '(406 . acs-btee)
   '(407 . acs-ttee)
   '(408 . acs-hline)
   '(409 . acs-vline)
   '(410 . acs-plus)
   '(411 . memory-lock)
   '(412 . memory-unlock)
   '(413 . box-chars-1)
   )
  )


;;;
;;; Utility
;;;

;; convert integer to boolean
(define-syntax %integer->boolean
  (syntax-rules () [(_ x) (if (zero? x) #f #t)]))

;; read little-endian short
(define (%read-short :optional (iport (current-input-port)))
  (let ([n (+ (read-byte iport) (* 256 (read-byte iport)))])
    (if (> n 32767) (- n 65536) n)))


;;; 
;;; Get path of Terminfo entry
;;;

(define (%terminfo-entry-path term)
  (let ([dir->path (cut string-append <> #`"/,(~ term 0)/,term")])
    (cond [(find file-is-regular? (map dir->path %default-terminfo-directories))]
          [(error #`"Can't find terminfo entry of ',term'. Please set right $TERMINFO environment variable.")])))


;;; 
;;; Load Terminfo entry (Return capability-symbols receiver)
;;; 

;; thanks http://users.actrix.co.nz/mycroft/terminfo.lisp
(define (load-terminfo-entry :key (term (sys-getenv "TERM")) path fallback)
  (define (%load-terminfo-entry)
    (let* ([term (x->string term)]
           [path (x->string
                 (if (undefined? path)
                     (%terminfo-entry-path term) path))]
           [entry (open-input-file path)])
      (unless (= #x011a (%read-short entry))
        (error "Invalid file signature."))
      (let* ([name-size (%read-short entry)]
             [bool-size (%read-short entry)]
             [numb-size (%read-short entry)]
             [stri-size (%read-short entry)]
             [strt-size (%read-short entry)]
             [name      (read-block name-size entry)]
             [booleans     (make-vector bool-size #f)]
             [numbers      (make-vector numb-size -1)]
             [strings      (make-vector stri-size -1)]
             [stringtable  (make-string strt-size #\null)]
             [true-booleans  '()]
             [false-booleans '()]
             [available-numbers '()]
             [available-strings '()])
        ;; load
        (dotimes (i bool-size)
          (vector-set! booleans i (%integer->boolean (read-byte entry))))
        ;; Between the boolean section and the number section, a null byte will be inserted,
        ;; if necessary, to ensure that the number section begins on an even byte.
        ;; http://dell9.ma.utexas.edu/cgi-bin/man-cgi?term
        (when (odd? (+ name-size bool-size)) (read-byte entry))
        (dotimes (i numb-size)
          (vector-set! numbers i (%read-short entry)))
        (dotimes (i stri-size)
          (vector-set! strings i (%read-short entry)))
        (dotimes (i strt-size)
          (string-set! stringtable i (integer->char (read-byte entry))))

        ;; set availability-list or modify each vector
        (dotimes (i bool-size)
          (if (vector-ref booleans i)
              (push! true-booleans  (ref %table-of-booleans i #f))
              (push! false-booleans (ref %table-of-booleans i #f))))
        (dotimes (i numb-size)
          (if (positive? (vector-ref numbers i))
              (push! available-numbers (ref %table-of-numbers i #f))
              (vector-set! numbers i #f)))
        (dotimes (i stri-size)
          (if ($ positive? $ vector-ref strings i)
              (let* ([start (vector-ref strings i)]
                     [end (string-index stringtable #\null
                                        start strt-size)])
                (vector-set! strings i
                             (substring stringtable start end))
                (push! available-strings (ref %table-of-strings i #f)))
              (vector-set! strings i #f)))

        (set! true-booleans  (reverse! true-booleans))
        (set! false-booleans (reverse! false-booleans))
        (set! available-numbers (reverse! available-numbers))
        (set! available-strings (reverse! available-strings))

        (make <capability>
          :true-booleans     true-booleans
          :false-booleans    false-booleans
          :available-numbers available-numbers
          :available-strings available-strings
          :fetch-capability
          (lambda (sym)
            (let1 syminfo (ref %table-of-capabilities sym #f)
                  (when syminfo
                    (let ([type  (car syminfo)]
                          [value (cdr syminfo)])
                      (let-values ([(vec size)
                                    (case type
                                      [(boolean) (values booleans bool-size)]
                                      [(number)  (values numbers numb-size)]
                                      [(string)  (values strings stri-size)])])
                        (if (or (< value 0) (>= value size)) (undefined)
                            (vector-ref vec value)))
                   )))))
            )))
  (if (undefined? fallback)
      (%load-terminfo-entry)
      (guard (_ [else fallback]) (%load-terminfo-entry))))
